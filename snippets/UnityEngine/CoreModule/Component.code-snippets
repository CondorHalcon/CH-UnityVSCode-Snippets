{
    // Properties
    "Component.gameObject" : {
        "prefix": "gameObject",
        "body": "gameObject",
        "description": "The game object this component is attached to.",
    },
    "Component.tag" : {
        "prefix": "tag",
        "body": "tag",
        "description": "The tag of this game object.",
    },
    "Component.transform" : {
        "prefix": "transform",
        "body": "transform",
        "description": "The Transform attached to this GameObject.",
    },

    // Public Methods
    "Component.BroadcastMessage1" : {
        "prefix": "BrodacastMessage(string methodName, object parameter, SendMessageOptions options)",
        "body": "BroadcastMessage(${1:string methodName}, ${2:object parameter = null}, ${3:SendMessageOptions options = SendMessageOptions.RequireReceiver})",
        "description": "Calls the method named 'methodName' on every MonoBehaviour in this game object or any of its children.",
    },
    "Component.BroadcastMessage2" : {
        "prefix": "BrodacastMessage(string methodName,SendMessageOptions options)",
        "body": "BroadcastMessage(${1:string methodName}, ${2:SendMessageOptions options})",
        "description": "Calls the method named 'methodName' on every MonoBehaviour in this game object or any of its children.",
    },
    "Component.CompareTag" : {
        "prefix": "CompareTag(string tag)",
        "body": "CompareTag(${1:string tag})",
        "description": "Is this game object tagged with 'tag' ?",
    },
    "Component.GetComponent1" : {
        "prefix": "GetComponent(Type type)",
        "body": "GetComponent(${1:Type type})",
        "description": "Returns the component of Type 'type' if the game object has one attached, null if it doesn't.",
    },
    "Component.GetComponent2" : {
        "prefix": "GetComponent<Type type>()",
        "body": "GetComponent<${1:Type type}>()",
        "description": "Returns the component of Type 'type' if the game object has one attached, null if it doesn't.",
    },
    "Component.GetComponent3" : {
        "prefix": "GetComponent(string type)",
        "body": "GetComponent(${1:string type})",
        "description": "Returns the component with name 'type' if the game object has one attached, null if it doesn't.",
    },
    "Component.GetComponentInChildren1" : {
        "prefix": "GetComponentInChildren(Type type)",
        "body": "GetComponentInChildren(${1:Type type})",
        "description": "Returns the component of Type 'type' in the GameObject or any of its children using depth first search.",
    },
    "Component.GetComponentInChildren2" : {
        "prefix": "GetComponentInChildren<Type type>()",
        "body": "GetComponentInChildren<${1:Type type}>()",
        "description": "Returns the component of Type 'type' in the GameObject or any of its children using depth first search.",
    },
    "Component.GetComponentInParent1" : {
        "prefix": "GetComponentInParent(Type type)",
        "body": "GetComponentInParent(${1:Type type})",
        "description": "Returns the component of Type 'type' in the GameObject or any of its parents.",
    },
    "Component.GetComponentInParent2" : {
        "prefix": "GetComponentInParent<Type type>()",
        "body": "GetComponentInParent<${1:Type type}>()",
        "description": "Returns the component of Type 'type' in the GameObject or any of its parents.",
    },
    "Component.GetComponents1" : {
        "prefix": "GetComponents(Type type)",
        "body": "GetComponents(${1:Type type})",
        "description": "Returns all components of Type 'type' in the GameObject.",
    },
    "Component.GetComponents2" : {
        "prefix": "GetComponents<Type type>()",
        "body": "GetComponents<${1:Type type}>()",
        "description": "Returns all components of Type 'type' in the GameObject.",
    },
    "Component.GetComponentsInChildren1" : {
        "prefix": "GetComponentsInChildren(Type type, bool includeInactive)",
        "body": "GetComponentsInChildren(${1:Type type}, ${2:bool includeInactive})",
        "description": "Returns all components of Type 'type' in the GameObject or any of its children.",
    },
    "Component.GetComponentsInChildren2" : {
        "prefix": "GetComponentsInChildren<Type type>(bool includeInactive)",
        "body": "GetComponentsInChildren<${1:Type type}>(${1:bool includeInactive})",
        "description": "Returns all components of Type 'type' in the GameObject or any of its children.",
    },
    "Component.GetComponentsInParent1" : {
        "prefix": "GetComponentsInParent(Type t, bool includeInactive)",
        "body": "GetComponentsInParent(${1:Type type}, ${2:bool includeInactive})",
        "description": "Returns all components of Type 'type' in the GameObject or any of its parents.",
    },
    "Component.GetComponentsInParent2" : {
        "prefix": "GetComponentsInParent<Type type>()",
        "body": "GetComponentsInParent<${1:Type type}>()",
        "description": "Returns all components of Type 'type' in the GameObject or any of its parents.",
    },
    "Component.GetComponentInParent3" : {
        "prefix": "GetComponentsInParent<Type type>(bool includeInactive)",
        "body": "GetComponentsInParent<${1:Type type}>(${1:bool includeInactive})",
        "description": "Returns all components of Type 'type' in the GameObject or any of its parents.",
    },
    "Component.SendMessage1" : {
        "prefix": "SendMessage(string methodName)",
        "body": "SendMessage(${1:string methodName})",
        "description": "Calls the method named 'methodName' on every MonoBehaviour in this game object.",
    },
    "Component.SendMessage2" : {
        "prefix": "SendMessage(string methodName, object value)",
        "body": "SendMessage(${1:string methodName}, ${2:object value})",
        "description": "Calls the method named 'methodName' on every MonoBehaviour in this game object.",
    },
    "Component.SendMessage3" : {
        "prefix": "SendMessage(string methodName, object value, SendMessageOptions options)",
        "body": "SendMessage(${1:string methodName}, ${2:object value}, ${3:SendMessageOptions options})",
        "description": "Calls the method named 'methodName' on every MonoBehaviour in this game object.",
    },
    "Component.SendMessage4" : {
        "prefix": "SendMessage(string methodName,SendMessageOptions options)",
        "body": "SendMessage(${1:string methodName}, ${2:SendMessageOptions options})",
        "description": "Calls the method named 'methodName' on every MonoBehaviour in this game object.",
    },
    "Component.SendMessageUpwards1" : {
        "prefix": "SendMessageUpwards(string methodName, SendMessageOptions options)",
        "body": "SendMessageUpwards(${1:string methodName}, ${2:SendMessageOptions options})",
        "description": "Calls the method named 'methodName' on every MonoBehaviour in this game object and on every ancestor of the behaviour.",
    },
    "Component.SendMessageUpwards2" : {
        "prefix": "SendMessageUpwards(string methodName, object value, SendMessageOptions options)",
        "body": "SendMessageUpwards(${1:string methodName}, ${2:object value}, ${3:SendMessageOptions options})",
        "description": "Calls the method named 'methodName' on every MonoBehaviour in this game object and on every ancestor of the behaviour.",
    },
    "Component.TryGetComponent1" : {
        "prefix": "TryGetComponent(Type type, out Component component)",
        "body": "TryGetComponent(${1:Type type}, out ${2:Component component})",
        "description": "Gets the component of the specified type, if it exists.",
    },
    "Component.TryGetComponent2" : {
        "prefix": "TryGetComponent(out Component component)",
        "body": "TryGetComponent(out ${1:Component component})",
        "description": "Gets the component of the specified type, if it exists.",
    },
}